{% set version = "0.5.1" %}
{% set posix = 'm2-' if win else '' %}

package:
  name: r-tidypredict
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/tidypredict_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/tidypredict/tidypredict_{{ version }}.tar.gz
  sha256: 2bc6f42716647acb1c96f1998e182f8ef685077fd3efe5023a9230fa50796330

build:
  number: 0
  noarch: generic
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-cli
    - r-dplyr >=0.7
    - r-generics
    - r-knitr
    - r-purrr
    - r-rlang >=1.1.1
    - r-tibble
    - r-tidyr
  run:
    - r-base
    - r-cli
    - r-dplyr >=0.7
    - r-generics
    - r-knitr
    - r-purrr
    - r-rlang >=1.1.1
    - r-tibble
    - r-tidyr
  run_constrained:
    - r-earth >=5.1.2
    - r-testthat >=3.2.0

test:
  commands:
    - $R -e "library('tidypredict')"           # [not win]
    - "\"%R%\" -e \"library('tidypredict')\""  # [win]

about:
  home: https://tidymodels.github.io/tidypredict
  license: MIT
  summary: "It parses a fitted 'R' model object, and returns a formula in 'Tidy Eval' code that calculates the predictions. It works with several databases back-ends because it leverages 'dplyr' and 'dbplyr' for the final 'SQL' translation of the algorithm. It currently supports lm(), glm(), randomForest(), ranger(), earth(),
    xgb.Booster.complete(), cubist(), and ctree() models. "
  license_family: MIT
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/MIT
    - LICENSE

extra:
  recipe-maintainers:
    - conda-forge/r
    - philip-khor
